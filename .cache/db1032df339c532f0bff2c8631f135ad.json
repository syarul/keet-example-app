{"dependencies":[],"generated":{"js":"\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function () {\n  function ktag(tag, value, attributes, styles) {\n    var attr,\n        idx,\n        te,\n        a = [].slice.call(arguments),\n        ret = ['<', a[0], '>', a[1], '</', a[0], '>'];\n    if (a.length > 2 && _typeof(a[2]) === 'object') {\n      for (attr in a[2]) {\n        if (typeof a[2][attr] === 'boolean' && a[2][attr]) ret.splice(2, 0, ' ', attr);else if (attr === 'class' && Array.isArray(a[2][attr])) ret.splice(2, 0, ' ', attr, '=\"', a[2][attr].join(' ').trim(), '\"');else ret.splice(2, 0, ' ', attr, '=\"', a[2][attr], '\"');\n      }\n    }\n    if (a.length > 3 && _typeof(a[3]) === 'object') {\n      idx = ret.indexOf('>');\n      te = [idx, 0, ' style=\"'];\n      for (attr in a[3]) {\n        te.push(attr);\n        te.push(':');\n        te.push(a[3][attr]);\n        te.push(';');\n      }\n      te.push('\"');\n      ret.splice.apply(ret, te);\n    }\n    return ret;\n  }\n  var args = [].slice.call(arguments),\n      arr = ktag.apply(null, args);\n  return arr.join('');\n};"},"hash":"d2c680a00fb5729934bb3f145835d820"}